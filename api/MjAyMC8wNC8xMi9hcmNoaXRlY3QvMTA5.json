{"title":"高并发系统：数据库优化-NoSQL补充","date":"2020-04-12T17:59:25.000Z","date_formatted":{"ll":"2020年4月12日","L":"2020/04/12","MM-DD":"04-12"},"link":"2020/04/12/architect/109","comments":true,"tags":["ElasticSearch","MongoDB","NoSQL","数据库","架构","高并发"],"categories":["架构"],"updated":"2020-04-12T09:49:13.096Z","content":"<p>NoSQL 数据库在性能、扩展性上的优势，以及它的一些特殊功能特性，主要有以下几点：</p>\n<ol><li>在性能方面，NoSQL 数据库使用一些算法将对磁盘的随机写转换成顺序写，提升了写的性能；</li><li>在某些场景下，比如全文搜索功能，关系型数据库并不能高效地支持，需要 NoSQL 数据库的支持；</li><li>在扩展性方面，NoSQL 数据库天生支持分布式，支持数据冗余和数据分片的特性。</li></ol><p>NoSQL 数据库发展到现在，十几年间，出现了多种类型，我来给你举几个例子：</p>\n<ul><li>Redis、LevelDB 这样的 KV 存储。这类存储相比于传统的数据库的优势是极高的读写性能，一般对性能有比较高的要求的场景会使用。</li><li>Hbase、Cassandra 这样的列式存储数据库。这种数据库的特点是数据不像传统数据库以行为单位来存储，而是以列来存储，适用于一些离线数据统计的场景。</li><li>MongoDB、CouchDB 这样的文档型数据库。这种数据库的特点是 Schema Free（模式自由），数据表中的字段可以任意扩展，比如说电商系统中的商品有非常多的字段，并且不同品类的商品的字段也都不尽相同，使用关系型数据库就需要不断增加字段支持，而用文档型数据库就简单很多了。</li></ul>","prev":{"title":"高并发系统：缓存使用","link":"2020/04/12/architect/110"},"next":{"title":"高并发系统：数据库优化-分库分表","link":"2020/04/12/architect/108"},"plink":"https://snailscoder.com/2020/04/12/architect/109/","reward":true,"copyright":{"link":"<a href=\"https://snailscoder.com/2020/04/12/architect/109/\" title=\"高并发系统：数据库优化-NoSQL补充\">https://snailscoder.com/2020/04/12/architect/109/</a>","license":"自由转载-非商用-禁止演绎-保持署名(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}