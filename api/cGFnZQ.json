{"per_page":10,"total":3,"current":1,"data":[{"title":"synchronized关键字和volatile关键字的区别","date":"2020-04-14T14:37:00.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/14/102.png","excerpt":"","link":"2020/04/14/java/sync-volatile","tags":["Java","synchronized","volatile","锁"],"categories":["后端"]},{"title":"【转】synchronized关键字最主要的三种使用方式的总结","date":"2020-04-14T14:16:00.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"excerpt":"","link":"2020/04/14/java/synchronized","tags":["Java","synchronized","锁"],"categories":["后端"]},{"title":"双重校验锁实现对象单例（线程安全）","date":"2020-04-14T12:16:00.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/14/257897.jpg","excerpt":"","link":"2020/04/14/java/Singleton","tags":["Java","单例","线程安全"],"categories":["后端"]},{"title":"【转】Java 8系列之重新认识HashMap","date":"2020-04-14T12:16:00.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"excerpt":"","link":"2020/04/14/java/hashmap-01","tags":["HashMap","Java","哈希函数"],"categories":["后端"]},{"title":"【转】通过源码一步步分析ArrayList扩容机制","date":"2020-04-14T11:55:25.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"excerpt":"","link":"2020/04/14/java/arraylist-grow","tags":["ArrayList","Java","扩容"],"categories":["后端"]},{"title":"高并发系统：消息队列使用","date":"2020-04-13T17:30:00.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/13/queue01.png","excerpt":"","link":"2020/04/13/architect/queue-01","tags":["架构","消息队列"],"categories":["架构"]},{"title":"高并发系统：缓存使用-缓存穿透","date":"2020-04-13T14:30:20.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/13/caffeine.jpg","excerpt":"","link":"2020/04/13/architect/cache-03","tags":["架构","穿透","缓存","高并发"],"categories":["架构"]},{"title":"高并发系统：缓存使用-CDN静态缓存","date":"2020-04-13T14:30:20.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"excerpt":"","link":"2020/04/13/architect/cache-04","tags":["CDN","架构","缓存","高并发"],"categories":["架构"]},{"title":"高并发系统：缓存使用-读写策略","date":"2020-04-13T11:30:25.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/13/kafei.jpg","excerpt":"","link":"2020/04/13/architect/cache-02","tags":["架构","策略","缓存","高并发"],"categories":["架构"]},{"title":"高并发系统：缓存简介","date":"2020-04-13T10:30:20.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/12/huancun.png","excerpt":"","link":"2020/04/13/architect/cache-01","tags":["架构","缓存","高并发"],"categories":["架构"]}]}