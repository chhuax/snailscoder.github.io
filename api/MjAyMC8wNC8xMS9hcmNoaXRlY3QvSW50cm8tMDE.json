{"title":"高并发系统：通用设计方法","date":"2020-04-11T16:56:25.000Z","date_formatted":{"ll":"2020年4月11日","L":"2020/04/11","MM-DD":"04-11"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/01/img1276.png","link":"2020/04/11/architect/Intro-01","comments":true,"tags":["架构","高并发"],"categories":["架构"],"updated":"2020-04-12T02:51:20.404Z","content":"<h3 id=\"洪水猛兽\">洪水猛兽<a href=\"#洪水猛兽\" title=\"洪水猛兽\"></a></h3><p>通常如何治理洪水，方案如下：</p>\n<ul><li>分流：将水分流到多个支流中，以分担水流压力</li><li>提高流速： 拓宽河道，清除淤沙让流水更加顺畅</li><li>水库：将水引入水库先存储起来，然后再想办法把水库中的水缓缓地排出去，以此提高下游的抗洪能力</li></ul><h3 id=\"高并发\">高并发<a href=\"#高并发\" title=\"高并发\"></a></h3><p>高并发就像洪水猛兽，处理方案类似：</p>\n<ul><li>横向扩展：分而治之是一种常见的高并发系统设计方法，采用分布式部署的方式把流量分流开，让每个服务器都承担一部分并发和流量。</li><li>缓存：使用缓存来提高系统的性能，就好比用“拓宽河道”的方式抵抗高并发大流量的冲击。</li><li>异步：在某些场景下，未处理完成之前我们可以让请求先返回，在数据准备好之后再通知请求方，这样可以在单位时间内处理更多的请求。</li></ul><hr>\n<h5 id=\"方案一：scale-out（横向扩展）\">方案一：Scale-out（横向扩展）<a href=\"#方案一：scale-out（横向扩展）\" title=\"方案一：Scale-out（横向扩展）\"></a></h5><p>系统分布式设计，横向扩展，增加节点。<br>微服务：SpringCloud</p>\n<h5 id=\"方案二：缓存\">方案二：缓存<a href=\"#方案二：缓存\" title=\"方案二：缓存\"></a></h5><p>为什么使用缓存？<br>普通磁盘的寻道时间是 10ms 左右，而相比于磁盘寻道花费的时间，CPU 执行指令和内存寻址的时间都是在 ns（纳秒）级别，从千兆网卡上读取数据的时间是在μs（微秒）级别。所以在整个计算机体系中磁盘是最慢的一环，甚至比其它的组件要慢几个数量级。因此我们通常使用以内存作为存储介质的缓存，以此提升性能。<br>Redis</p>\n<h5 id=\"方案三：异步\">方案三：异步<a href=\"#方案三：异步\" title=\"方案三：异步\"></a></h5><p>调用方不需要等待方法逻辑执行完成就可以返回执行其他的逻辑，在被调用方法执行完毕后再通过回调、事件通知等方式将结果反馈给调用方。<br><a href=\"https://spring.io/reactive\" target=\"_blank\">Reactive</a><br>三方消息：RabbitMQ，Kafka，RocketMQ，ActiveMQ等</p>\n","prev":{"title":"高并发系统：经典分层举例","link":"2020/04/11/architect/intro-02"},"next":{"title":"学会承受人生必然的孤独，过了才能看见美好繁华！","link":"2020/04/03/notes/2020-04-03"},"plink":"https://snailscoder.com/2020/04/11/architect/Intro-01/","reward":true,"copyright":{"link":"<a href=\"https://snailscoder.com/2020/04/11/architect/Intro-01/\" title=\"高并发系统：通用设计方法\">https://snailscoder.com/2020/04/11/architect/Intro-01/</a>","license":"自由转载-非商用-禁止演绎-保持署名(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}