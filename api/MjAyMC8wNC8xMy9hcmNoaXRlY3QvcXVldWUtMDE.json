{"title":"高并发系统：消息队列简介","date":"2020-04-13T17:30:00.000Z","date_formatted":{"ll":"2020年4月13日","L":"2020/04/13","MM-DD":"04-13"},"link":"2020/04/13/architect/queue-01","comments":true,"tags":["架构","消息队列"],"categories":["架构"],"updated":"2020-04-13T09:34:25.342Z","content":"<p>在历年的工作经历中，一直把消息队列看作暂时存储数据的一个容器，认为它是一个平衡低速系统和高速系统处理任务时间差的工具。<br>我理解的消息队列的主要作用有以下三点：</p>\n<ul><li><strong>异步处理</strong>-可以简化业务流程中的步骤，提升系统性能；</li><li><strong>削峰填谷</strong>-可以削去到达秒杀系统的峰值流量，让业务逻辑的处理更加缓和；</li><li><strong>解耦合</strong>-可以将秒杀系统和数据系统解耦开，这样两个系统的任何变更都不会影响到另一个系统</li></ul>","next":{"title":"高并发系统：缓存使用-缓存穿透","link":"2020/04/13/architect/cache-03"},"plink":"https://snailscoder.com/2020/04/13/architect/queue-01/","reward":true,"copyright":{"link":"<a href=\"https://snailscoder.com/2020/04/13/architect/queue-01/\" title=\"高并发系统：消息队列简介\">https://snailscoder.com/2020/04/13/architect/queue-01/</a>","license":"自由转载-非商用-禁止演绎-保持署名(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}