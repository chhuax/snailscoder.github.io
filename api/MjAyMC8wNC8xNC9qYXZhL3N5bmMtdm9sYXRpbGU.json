{"title":"synchronized关键字和volatile关键字的区别","date":"2020-04-14T14:37:00.000Z","date_formatted":{"ll":"2020年4月14日","L":"2020/04/14","MM-DD":"04-14"},"thumbnail":"https://blogimg-1254014761.cos.ap-beijing.myqcloud.com/2020/04/14/102.png","link":"2020/04/14/java/sync-volatile","comments":true,"tags":["Java","synchronized","volatile","锁"],"categories":["后端"],"updated":"2020-04-14T09:14:21.640Z","content":"<h2 id=\"并发编程的三个重要特性\">并发编程的三个重要特性<a href=\"#并发编程的三个重要特性\" title=\"并发编程的三个重要特性\"></a></h2><ol><li><strong>原子性:</strong> 一个操作或多个操作，要么所有的操作全部都得到执行并且不会受到任何因素的干扰而中断，要么所有的操作都执行，要么都不执行。synchronized可以保证代码片段的原子性。</li><li><strong>可见性:</strong> 当一个变量对共享变量做了修改，那么另外的线程都立即可以看到修改后的最新值。volatile关键字可以保证共享变量的可见性。</li><li><strong>有序性:</strong> 代码在执行的过程中的先后顺序，Java在编译器以及运行期间的优化，代码的执行顺序未必就是按编写代码的顺序。volatile关键字可以禁止指令进行重排序优化。</li></ol><h2 id=\"synchronized关键字和volatile关键字的区别\">synchronized关键字和volatile关键字的区别<a href=\"#synchronized关键字和volatile关键字的区别\" title=\"synchronized关键字和volatile关键字的区别\"></a></h2><ul><li>volatile关键字是线程同步的轻量级实现，所以volatile性能肯定比synchronized关键字要好。但是volatile关键字只能用于变量，而synchronized关键字可以修饰方法以及代码块。synchronized关键字在JavaSE1.6之后进行了主要包括为了减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁以及其它各种优化之后效率有了显著的提升，实际开发中使用synchronized关键字的场景还是更多一些。</li><li>多线程访问volatile关键字不会发生阻塞，而synchronized关键字可能发生阻塞。</li><li>volatile关键字能保证数据的可见性，但不能保障原子性。synchronized关键字两者都能保障。</li><li>volatile关键字主要用于解决变量在多个线程之间的可见性，而synchronized关键字解决的是多个线程之间访问资源的同步性。</li></ul>","prev":{"title":"ArrayList源码解析","link":"2020/04/21/java/arraylist"},"next":{"title":"【转】synchronized关键字最主要的三种使用方式的总结","link":"2020/04/14/java/synchronized"},"plink":"https://snailscoder.com/2020/04/14/java/sync-volatile/","reward":true,"copyright":{"link":"<a href=\"https://snailscoder.com/2020/04/14/java/sync-volatile/\" title=\"synchronized关键字和volatile关键字的区别\">https://snailscoder.com/2020/04/14/java/sync-volatile/</a>","license":"自由转载-非商用-禁止演绎-保持署名(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}